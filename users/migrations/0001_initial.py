# Generated by Django 3.2.4 on 2021-06-22 14:17

from django.db import migrations, models
import users.models
import users.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default=users.utils.get_uuid, max_length=32)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email (optional)')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('full_name', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=256, null=True, verbose_name='Seller/Service personal location')),
                ('operation_radius', models.CharField(blank=True, max_length=10, null=True)),
                ('delivery_address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Buyer location')),
                ('user_type', models.CharField(choices=[('buyer', 'buyer'), ('seller', 'seller'), ('admin', 'admin'), ('service_personal', 'service_personal')], max_length=16)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
